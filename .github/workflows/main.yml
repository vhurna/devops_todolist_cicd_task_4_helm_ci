name: python-deployment
run-name: ${{ github.actor }} - ${{ github.ref_name }} - ${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PythonVersion: 3.8
  DockerImageName: todoapp

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload repo artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo
          path: .

  python-ci:
    needs: checkout
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
          path: .

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

      - name: Generate coverage report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Linting
        run: flake8 . --show-source --statistics --exit-zero

      - name: Check complexity
        run: flake8 . --exit-zero --max-complexity=6

      - name: Upload python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: .

  docker-ci:
    if: github.ref_name == 'main'
    needs: python-ci
    runs-on: ubuntu-latest
    steps:
      - name: Download python artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageName }}:${{ github.sha }}

  helm-ci:
    if: github.ref_name == 'main'
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
          path: .

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Template Helm chart
        run: helm template kube2py ./helm-charts/kube2py -f ./helm-charts/kube2py/values.yaml

      - name: Lint Helm chart
        run: helm lint ./helm-charts/kube2py

      - name: Package Helm chart
        run: helm package ./helm-charts/kube2py

      - name: Upload Helm package
        uses: actions/upload-artifact@v4
        with:
          name: helm-package
          path: '*.tgz'
