name: python-deployment
run-name: ${{ github.actor }} – ${{ github.ref_name }} – ${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PythonVersion: 3.8
  DockerImageName: todoapp

jobs:
  ## 1) Checkout + артефакти
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload full repo
        uses: actions/upload-artifact@v4
        with:
          name: repo
          path: .

  ## 2) Python CI
  python-ci:
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
          path: .

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r src/requirements.txt

      - name: Run tests
        run: python src/manage.py test

      - name: Generate coverage report
        run: |
          coverage run --source='.' src/manage.py test
          coverage report

      - name: Lint & complexity check
        run: |
          flake8 src --show-source --statistics --exit-zero --max-complexity=6

  ## 3) Docker CI (тільки main)
  docker-ci:
    if: github.ref_name == 'main'
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageName }}:${{ github.sha }}

  ## 4) Helm CI (тільки main)
  helm-ci:
    if: github.ref_name == 'main'
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
          path: .

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Lint Helm chart
        run: helm lint ./helm-charts/todoapp

      - name: Template Helm chart
        run: |
          helm template todoapp \
            ./helm-charts/todoapp \
            -f ./helm-charts/todoapp/values.yaml

      - name: Package Helm chart
        run: helm package ./helm-charts/todoapp

      - name: Upload Helm package
        uses: actions/upload-artifact@v4
        with:
          name: helm-package
          path: 'todoapp-*.tgz'
